name: untrust-project-bom

on:
  push:
    branches: [main]

jobs:
  untrust-go-project-and-binary-with-bom:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: untrust Go project with BoM
        #--> Run the GitHub action
        uses: codenotary/vcn-untrust-bom-go-github-action@v1.0.0
        # uses: codenotary/vcn-untrust-bom-go-github-action@main
        with:
          asset: git://.
          cnil_host: ${{ secrets.CNIL_HOST }}
          cnil_grpc_port: ${{ secrets.CNIL_GRPC_PORT }}
          cnil_api_key: ${{ secrets.CNIL_API_KEY }}
        #<--
        #--> or run the vcn Docker image directly (all vcn flags are available and passed through)
        # uses: docker://codenotary/vcn:bom-golang
        # with:
        #   args: n git://. --lc-host ${{ secrets.CNIL_HOST }} --lc-port ${{ secrets.CNIL_GRPC_PORT }} --lc-api-key ${{ secrets.CNIL_API_KEY }} --bom
        #<--

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.x

      - name: Build Go binary
        run: go build .

      - name: untrust Go binary with BoM
        #--> Run the GitHub action
        uses: codenotary/vcn-untrust-bom-go-github-action@v1.0.0
        # uses: codenotary/vcn-untrust-bom-go-github-action@main
        with:
          asset: example-go-project
          cnil_host: ${{ secrets.CNIL_HOST }}
          cnil_grpc_port: ${{ secrets.CNIL_GRPC_PORT }}
          cnil_api_key: ${{ secrets.CNIL_API_KEY }}
        #<--
        #--> or run the vcn Docker image directly (all vcn flags are available and passed through)
        # uses: docker://codenotary/vcn:bom-golang
        # with:
        #   args: n example-go-project --lc-host ${{ secrets.CNIL_HOST }} --lc-port ${{ secrets.CNIL_GRPC_PORT }} --lc-api-key ${{ secrets.CNIL_API_KEY }} --bom
        #<--
